name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        targetplatform: [x64]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    permissions:
      contents: "write"
      packages: "write"
      pull-requests: "read"

    env:
      Solution_Name: DLSSUpdater.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      
    steps:  
    
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0    

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Create the package
      run: dotnet publish --configuration Release ${Solution_Name} --self-contained false -p:PublishSingleFile=True -p:PublishReadyToRun=False --output bin\fire\out

    - name: Zip Release
      uses: vimtor/action-zip@v1.2
      with:
        files: bin\fire\out
        recursive: true
        dest: dlssupdater.zip
        
    - name: Get version of the project
      id: project-version
      uses: 'euberdeveloper/ga-project-version@main'
      with:
        path: DlssUpdater\version.json
       
    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.project-version.outputs.version }}
        release_name: v${{ steps.project-version.outputs.version }}
        draft: false
        prerelease: false

    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dlssupdater.zip
        asset_name: dlssupdater.zip
        asset_content_type: application/zip
        
    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./DlssUpdater/version.json
        asset_name: version.json
        asset_content_type: application/json

    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}

    - uses: sarisia/actions-status-discord@v1
      if: success()
      with:
        webhook: ${{ secrets.WEBHOOK_URL }}
        nodetail: true
        title: "New version of `Dlss Updater` is ready!"
        description: |
          Version `${{ steps.project-version.outputs.version }}`
          Download directly inside `Dlss Updater` or [here](${{ steps.create_release.outputs.html_url }}).
        color: 0xff91a4

